//This code created by chat GPT by asking the code for mpu6050 with esp32 and wire.h library
//Add some comment for studying
//Read register map of mpu6050 at https://invensense.tdk.com/wp-content/uploads/2015/02/MPU-6000-Register-Map1.pdf

// I2C communication standard library from Arduino
#include <Wire.h>
//I2c address of MPU6050
#define MPU6050_I2C_ADDRESS 0x68

void setup() {
    Serial.begin(115200);
    
    //Activate I2C communication
    Wire.begin();
      Wire.beginTransmission(MPU_ADDR);
      Wire.write(0x6B);  // PWR_MGMT_1 register
      Wire.write(0);     // set to zero (wakes up the MPU-6050)
      Wire.endTransmission(true);
}

void loop() {
    // Request data from MPU6050 which address is in Hex (0x68). The wire library will convert it to bit.
    Wire.beginTransmission(MPU6050_I2C_ADDRESS);
    
    Wire.write(0x3B);  // Send the first byte for the address that going to read
    Wire.endTransmission(false); // end the transmisstion to prepare the furture communication

    //Ask the mpu6050 to sent accelerometer data by 6 bytes and stop. Then stored in Wire object
    //The 6 Byte is all acceleration data. It need 2 byte for acceleration in x axis, so the total is 6 byte
    Wire.requestFrom(MPU6050_I2C_ADDRESS, 6, 1);  // Request 6 bytes (accelerometer data)
    
    // Read accelerometer data
    //Wire.read() will read first 8 bite. If we activate after this, it will read the following 8 bit
    //The operator "<< 8" will shift to the left by 8 bit. Example if wire.read = 01010011, the wire.read <<8 = 0101001100000000
    //Operator Or (|) will add 2 byte togater
    int16_t accelX = Wire.read() << 8 | Wire.read();
    int16_t accelY = Wire.read() << 8 | Wire.read();
    int16_t accelZ = Wire.read() << 8 | Wire.read();

    // Print or process the data as needed
    Serial.print("Accel X: "); Serial.println(accelX);
    Serial.print("Accel Y: "); Serial.println(accelY);
    Serial.print("Accel Z: "); Serial.println(accelZ);

    delay(1000);  // Adjust as needed
}
